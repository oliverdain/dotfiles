global !p
def year():
	import datetime
	return datetime.datetime.now().year
endglobal


snippet param "The Parameters in a method comment block"
Parameters
----------
$0
endsnippet

snippet ret "The Returns in a method comment block"
Returns
-------
$0
endsnippet

snippet main "Builds a skeleton of a file with a main and argument parsing"
import argparse
import logging

log = logging.getLogger(__name__)
logging.basicConfig(level=logging.INFO)


def parse_args() -> argparse.Namespace:
    parser = argparse.ArgumentParser('$0',
                                     description='$1',
                                     formatter_class=argparse.ArgumentDefaultsHelpFormatter)
	
    return parser.parse_args()


def main() -> None:
    args = parse_args()


if __name__ == '__main__':
	main()
endsnippet

snippet log "Add a logger"
log = logging.getLogger(__name__)
endsnippet

snippet cmd "Add a sub-command to a CLI"
import argparse

from type_helpers.argparse import SubParser


def add_$1_args(main_subs: SubParser) -> None:
    p = main_subs.add_parser('$2', help='$3',
                             formatter_class=argparse.ArgumentDefaultsHelpFormatter)

    p.set_defaults(func=$4)


def $4(args: argparse.Namespace) -> None:
    pass
endsnippet

snippet nfc "Add copyright notice to a new file"
# Copyright `!p snip.rv = year()`, Companion Labs, Inc. All rights reserved.

$1
endsnippet
